{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;;;;;;AAGA,IAAM,uBAAuB,GAAG,CAAC,WAAW,CAAC,CAAC;AAC9C,IAAM,2BAA2B,GAAG,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;;IAE3C,KAAK;eAAL,KAAK;;gCACL,WAAW,EAAE;AAC9B,UAAI,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;;AAEnC,WAAK,IAAI,IAAI,IAAI,IAAI,EAAE;AACrB,eAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/B,YAAI,uBAAuB,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AAChD,cAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;AACrC,gBAAM,UAAU,GAAG,MAAM,CAAC,wBAAwB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;;AAEtE,kBAAM,CAAC,cAAc,CAAC,WAAW,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;WACtD;SACF;OACF;;AAED,UAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,YAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;OAC5B;KACF;;;2BAEa,MAAM,EAAE;;;;;;AACpB,6BAAiB,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,8HAAE;cAApD,IAAI;;AACX,cAAI,2BAA2B,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AACpD,gBAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;AAChC,kBAAM,UAAU,GAAG,MAAM,CAAC,wBAAwB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;;AAEzE,oBAAM,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;aACjD;WACF;SACF;;;;;;;;;;;;;;;;AAED,UAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;AAC3B,YAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;OACjC;KACF;;;AAED,WApCmB,KAAK,GAoCV;0BApCK,KAAK;;AAqCtB,QAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,UAAI,CAAC,QAAQ,EAAE,CAAC;KACjB;GACF;;SAxCkB,KAAK;;;kBAAL,KAAK;;AA2C1B,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;AACtB,MAAI,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;AAC9B,2BAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GACpC;CACF","file":"index.js","sourcesContent":["/* eslint no-invalid-this: 0*/\n/* eslint guard-for-in: 0*/\n\nconst ExcludedClassProperties = ['__super__'];\nconst ExcludedPrototypeProperties = ['constructor', 'extended'];\n\nexport default class Mixin {\n  static includeInto(constructor) {\n    this.extend(constructor.prototype);\n\n    for (let name in this) {\n      console.log('PROP', this.name);\n      if (ExcludedClassProperties.indexOf(name) === -1) {\n        if (!constructor.hasOwnProperty(name)) {\n          const descriptor = Object.getOwnPropertyDescriptor(constructor, name);\n\n          Object.defineProperty(constructor, name, descriptor);\n        }\n      }\n    }\n\n    if (this.included) {\n      this.included(constructor);\n    }\n  }\n\n  static extend(object) {\n    for (let name of Object.getOwnPropertyNames(this.prototype)) {\n      if (ExcludedPrototypeProperties.indexOf(name) === -1) {\n        if (!object.hasOwnProperty(name)) {\n          const descriptor = Object.getOwnPropertyDescriptor(this.prototype, name);\n\n          Object.defineProperty(object, name, descriptor);\n        }\n      }\n    }\n\n    if (this.prototype.extended) {\n      this.prototype.extended(object);\n    }\n  }\n\n  constructor() {\n    if (this.extended) {\n      this.extended();\n    }\n  }\n}\n\nfor (let name in Mixin) {\n  if (Mixin.hasOwnProperty(name)) {\n    ExcludedClassProperties.push(name);\n  }\n}\n\n"]}